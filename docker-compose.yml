services:
  nginx:
    container_name: nginx
    image: nginx:latest
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./data/html:/var/www/html
      - ./logs/nginx:/var/log/nginx
    ports:
      - "8080:80"
    links:
      - wordpress
    logging:
      driver: none

  wordpress:
    depends_on:
      - db
    container_name: wordpress
    image: wordpress:latest
    volumes:
      - ./data/html:/var/www/html
    ports:
      - "80:80"
    restart: always
    environment:
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_USER: ${MYSQL_USER}
      WORDPRESS_DB_PASSWORD: ${MYSQL_PASSWORD}
      WORDPRESS_DB_NAME: wordpress
    logging:
      driver: none

  db:
    image: mysql:5.7
    container_name: db
    volumes:
      - ./data/mysql:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: wordpress
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    ports:
      - 3306:3306
    logging:
      driver: none

  db-exporter:
    image: prom/mysqld-exporter
    container_name: db-exporter
    command:
      - "--mysqld.username=root:${MYSQL_ROOT_PASSWORD}"
      - "--mysqld.address=db:3306"
    ports:
      - 9104:9104
    depends_on:
      - db
    logging:
      driver: none

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - 9100:9100
    logging:
      driver: none

  blackbox-exporter:
    image: prom/blackbox-exporter:latest
    container_name: blackbox-exporter
    volumes: 
      - ./blackbox.yml:/config/blackbox.yml
    command:
      - '--config.file=/config/blackbox.yml'
    restart: unless-stopped
    ports:
      - 9115:9115
    depends_on:
      - wordpress
    logging:
      driver: none

  minio:
    image: minio/minio
    container_name: minio
    entrypoint: [""]
    command: ["sh", "-c", "mkdir -p /data/mimir && minio server --quiet /data"]
    environment:
      - MINIO_ROOT_USER=mimir
      - MINIO_ROOT_PASSWORD=supersecret
    volumes:
      - ./minio-data:/data

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - ./grafana/data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GS_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    ports:
      - 3000:3000
    depends_on:
      - prometheus
      # - alertmanager
    user: 1000:1000

  prometheus:
    image: prom/prometheus:latest
    container_name: promtheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus-data:/prometheus
      - ./rules.yaml:/etc/prometheus/rules.yaml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--log.level=error'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    depends_on:
      - "mimir-1"
      - "mimir-2"
      - "mimir-3"
    user: 1000:1000

  load-balancer:
    image: nginx:latest
    container_name: load-balancer
    volumes:
      - ./mimir-config/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - "mimir-1"
      - "mimir-2"
      - "mimir-3"
    ports:
      - 9009:9009

  mimir-1:
    image: grafana/mimir:latest
    container_name: mimir-1
    command: ["-config.file=/etc/mimir.yaml"]
    hostname: mimir-1
    depends_on:
      - minio
    volumes:
      - ./mimir-config/mimir.yaml:/etc/mimir.yaml
      - ./mimir-1-data:/data

  mimir-2:
    image: grafana/mimir:latest
    container_name: mimir-2
    command: ["-config.file=/etc/mimir.yaml"]
    hostname: mimir-2
    depends_on:
      - minio
    volumes:
      - ./mimir-config/mimir.yaml:/etc/mimir.yaml
      - ./mimir-2-data:/data

  mimir-3:
    image: grafana/mimir:latest
    container_name: mimir-3
    command: ["-config.file=/etc/mimir.yaml"]
    hostname: mimir-3
    depends_on:
      - minio
    volumes:
      - ./mimir-config/mimir.yaml:/etc/mimir.yaml
      - ./mimir-3-data:/data

  # alertmanager:
  #   image: prom/alertmanager:latest
  #   container_name: alertmanager
  #   hostname: alertmanager
  #   volumes:
  #     - ./alertmanager:/etc/alertmanager
  #     - alertmanager-data:/alertmanager/data
  #   command: ['--config.file=/etc/alertmanager/config.yaml']
  #   ports:
  #     - 9093:9093
  #   networks:
  #     - monitoring
  #   depends_on:
  #     - prometheus

# volumes:
  # alertmanager-data: {}

